version: '3'

services:
  frontend:
    image: node:22
    working_dir: /app
    command: npm start -w frontend
    restart: unless-stopped
    volumes:
      - ./:/app
      - /app/backend
    environment:
      PORT: ${FRONTEND_PORT:-3002}
      API_URL: http://backend:${BACKEND_PORT:-3001}
      API_TOKEN: ${FRONTEND_API_KEY:-website-scaffold}
    depends_on:
      - backend
    ports:
      - ${FRONTEND_PORT:-3002}:${FRONTEND_PORT:-3002}

  backend:
    image: node:22
    working_dir: /app
    # tty: true
    command: bash -c "npm run setup -w backend && npm start -w backend"
    restart: unless-stopped
    volumes:
      - ./:/app
      - /app/frontend
    environment:
      HOST: ${BACKEND_HOST:-0.0.0.0}
      PORT: ${BACKEND_PORT:-3001}
      KEY: ${BACKEND_KEY:-website-scaffold}
      SECRET: ${BACKEND_SECRET:-website-scaffold}
      DB_CLIENT: pg
      DB_HOST: db
      DB_PORT: ${DATABASE_PORT:-3000}
      DB_DATABASE: ${DATABASE_NAME:-website_scaffold}
      DB_USER: ${DATABASE_USERNAME:-website_scaffold}
      DB_PASSWORD: ${DATABASE_PASSWORD:-website_scaffold}
      ADMIN_EMAIL: ${BACKEND_INITIAL_ADMIN_EMAIL:-admin@website-scaffold.com}
      ADMIN_PASSWORD: ${BACKEND_INITIAL_ADMIN_PASSWORD:-website-scaffold}
    depends_on:
      - db
    ports:
      - ${BACKEND_PORT:-3001}:${BACKEND_PORT:-3001}

  db:
    image: postgres:12
    environment:
      PGPORT: ${DATABASE_PORT:-3000}
      POSTGRES_DB: ${DATABASE_NAME:-website_scaffold}
      POSTGRES_USER: ${DATABASE_USERNAME:-website_scaffold}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-website_scaffold}
    volumes:
      - db-volume:/var/lib/postgresql/data
      - ./backend/dumps/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${DATABASE_PORT:-3000}:${DATABASE_PORT:-3000}

volumes:
  db-volume:
